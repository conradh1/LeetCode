import java.io.*;
import java.util.*;
/*

https://leetcode.com/problems/find-the-difference/

Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.
*/
public class FindTheDifference {

  public static void main(String[] args) {
    // build the simple tree from chapter 11.
    String s = "abcde";
    String t = "abcdee";

    System.out.println(findTheDifference(s,t));
  }


  public static char findTheDifference(String s, String t) {
      LinkedHashMap<Character,Integer> sList = new LinkedHashMap<Character,Integer>();
      LinkedHashMap<Character,Integer> tList = new LinkedHashMap<Character,Integer>();
      char[] sa = s.toCharArray();
      char[] ta = t.toCharArray();

      for ( int i = 0; i < sa.length; i++) {
        if (sList.containsKey(sa[i])) {
            int num = sList.get(sa[i]);
            sList.put(sa[i],++num);
        }
        else
           sList.put(sa[i],1);
      }

      for ( int i = 0; i < ta.length; i++) {
        if (!sList.containsKey(ta[i])) return ta[i];  // case not in previous LinkedList

        if ( tList.containsKey(ta[i])) {
            int num = tList.get(ta[i]);
            tList.put(ta[i],++num);
        }
        else
           tList.put(ta[i],1);
      }


      for(Character key : sList.keySet()) {
          int snum = sList.get(key);
          int tnum = tList.get(key);

          if ( snum != tnum) return key;
      }

      return '\0';

  }
}
